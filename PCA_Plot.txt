#Upload libraries

library(dplyr)
library("ggforce")
library(ggplot2)

#Upload pcs, populations and merge it
pcs_abcd_1kg <- read.delim("C:/Users/angel/Desktop/ABCD_04_04/PCs_Ancestry/20PCs_ABCD-1kg.eigenvec")
pops <- read.delim("C:/Users/angel/Desktop/ABCD_04_04/PCs_Ancestry/pops.txt")
pcs <- merge(pcs_abcd_1kg,pops, by='IID', all.x = T)

#Define pops colours
cbbPalette <- c("#FF3333", "#00FF00", "#7F00FF", "#F0E442", "#606060")

#Subset for 1KG data
pcs_1kg=subset(pcs,pcs$Superpopulation.code!="OWN")

#PCA-PLOT 1KG
ggplot(pcs_1kg,aes(x=PC1,y=PC2,color=Superpopulation.code)) + geom_point() + xlim(-0.04, 0.01) + ylim(-0.02, 0.04) + xlab("PC1") + ylab("PC2") + scale_color_manual(values=cbbPalette) 


#Define EUROPEAN in 1KG and plot/circle the area where EUR is defined
pcs_1kg_eur <- subset(pcs_1kg, pcs_1kg$Superpopulation.code == "EUR")
eurx <- mean(pcs_1kg_eur$PC1)
eury <- mean(pcs_1kg_eur$PC2)
eurradius <- 3*sd(pcs_1kg_eur$PC2)


data_circle <- data.frame(x0 = eurx,       
                          y0 = eury,
                          r = eurradius)

ggplot() + geom_point(data = pcs_1kg, aes (x=PC1, y= PC2, col = Superpopulation.code)) + geom_circle(data= data_circle, aes(x0 = x0, y0 = y0, r = r)) + xlim(-0.04, 0.03) + ylim(-0.02, 0.04) + xlab("PC1") + ylab("PC2") + scale_color_manual(values=cbbPalette) 


#PCA-PLOT 1KG + ABCD DATASET

ggplot() + geom_point(data = pcs_1kg, aes (x=PC1, y= PC2, col = Superpopulation.code)) + geom_circle(data= data_circle, aes(x0 = x0, y0 = y0, r = r)) + xlim(-0.04, 0.03) + ylim(-0.02, 0.04) + xlab("PC1") + ylab("PC2") + scale_color_manual(values=cbbPalette) 



#AMERICAN
pcs_1kg_amr <- subset(pcs_1kg, pcs_1kg$Superpopulation.code == "AMR")
amrx <- mean(pcs_1kg_amr$PC1)
amry <- mean(pcs_1kg_amr$PC2)
amrradius <- 3*sd(pcs_1kg_amr$PC2)

data_circle <- data.frame(x0 = amrx,       
                          y0 = amry,
                          r = amrradius)

#AFRICAN AND EAST ASIAN
pcs_1kg_afr <- subset(pcs_1kg, pcs_1kg$Superpopulation.code == "AFR") 
pcs_1kg_eas <- subset(pcs_1kg, pcs_1kg$Superpopulation.code == "EAS")

#PCA PLOT 
ggplot() + geom_point(data = pcs_1kg, aes (x=PC1, y= PC2, col = Superpopulation.code)) + geom_circle(data= data_circle, aes(x0 = x0, y0 = y0, r = r)) + xlim(-0.04, 0.03) + ylim(-0.02, 0.04) + xlab("PC1") + ylab("PC2") + scale_color_manual(values=cbbPalette) 



ggplot(pcs,aes(x=PC1,y=PC2,color=Superpopulation.code, shape = Superpopulation.code)) + geom_point(alpha=0.8) + xlab("PC1") + ylab("PC2") + scale_color_manual(values=cbbPalette) + scale_shape_manual(values=c(16,16,16,16,5))


####

library(dplyr)

colnames(eigenvec) <- c('FID','IID','PC1','PC2','PC3','PC4','PC5','PC6', 'PC7','PC8','PC9', 'PC10','PC11','PC12', 'PC13','PC14','PC15','PC16', 'PC17','PC18','PC19', 'PC20')

pcs <- merge(eigenvec,pops, by='IID', all.x = T)
write.table(pcs,'pcs_pops',quote=F,row.names = F)

cbbPalette <- c("#FF3333", "#00FF00", "#7F00FF", "#F0E442", "#606060")
pcs_notown=subset(pcs,pcs$Superpopulation.code!="OWN")

library(ggplot2)
ggplot(pcs_notown,aes(x=PC1,y=PC2,color=Superpopulation.code)) + geom_point(alpha=0.4) + xlab("PC1") + ylab("PC2") + scale_color_manual(values=cbbPalette) 

ggplot(pcs,aes(x=PC1,y=PC2,color=Superpopulation.code)) + geom_point(alpha=0.4) + xlab("PC1") + ylab("PC2") + scale_color_manual(values=cbbPalette) 

geno=subset(pcs,pcs$Superpopulation.code=="OWN")
EUR=subset(pcs,pcs$Superpopulation.code=="EUR")
AMR=subset(pcs,pcs$Superpopulation.code=="AMR")
AFR=subset(pcs,pcs$Superpopulation.code=="AFR")
EAS=subset(pcs,pcs$Superpopulation.code=="EAS")

EUR_1=subset(pcs,pcs$Superpopulation.code)

#EUR$EURO<-â€˜Yes
#euro<-subset(euro, select=c(IID, EURO))
#pcs_new<-dplyr:: join(pcs, euro)

#Same for American and AFR, i will get more columns. 


#EUR PCmax and PCmin
PC1max_eur <- mean(EUR$PC1) + 3*sd(EUR$PC1)
PC1min_eur <- mean(EUR$PC1) - 3*sd(EUR$PC1)
PC2max_eur <- mean(EUR$PC2) + 3*sd(EUR$PC2)
PC2min_eur <- mean(EUR$PC2) - 3*sd(EUR$PC2)
PC3max_eur <- mean(EUR$PC3) + 3*sd(EUR$PC3)
PC3min_eur <- mean(EUR$PC3) - 3*sd(EUR$PC3)
PC4max_eur <- mean(EUR$PC4) + 3*sd(EUR$PC4)
PC4min_eur <- mean(EUR$PC4) - 3*sd(EUR$PC4)

geno_eur <- subset(geno,geno$PC1 < PC1max_eur & geno$PC1 > PC1min_eur & geno$PC2 < PC2max_eur & geno$PC2 > PC2min_eur & geno$PC3 < PC3max_eur & geno$PC3 > PC3min_eur & geno$PC4 < PC4max_eur & geno$PC4 > PC4min_eur)

#AMR PCmax and PCmin
PC1max_amr <- mean(AMR$PC1) + 3*sd(AMR$PC1)
PC1min_amr <- mean(AMR$PC1) - 3*sd(AMR$PC1)
PC2max_amr <- mean(AMR$PC2) + 3*sd(AMR$PC2)
PC2min_amr <- mean(AMR$PC2) - 3*sd(AMR$PC2)
PC3max_amr <- mean(AMR$PC3) + 3*sd(AMR$PC3)
PC3min_amr <- mean(AMR$PC3) - 3*sd(AMR$PC3)
PC4max_amr <- mean(AMR$PC4) + 3*sd(AMR$PC4)
PC4min_amr <- mean(AMR$PC4) - 3*sd(AMR$PC4)

geno_amr <- subset(geno,geno$PC1 < PC1max_amr & geno$PC1 > PC1min_amr & geno$PC2 < PC2max_amr & geno$PC2 > PC2min_amr & geno$PC3 < PC3max_amr & geno$PC3 > PC3min_amr & geno$PC4 < PC4max_amr & geno$PC4 > PC4min_amr)

#AFR PCmax and PCmin
PC1max_afr <- mean(AFR$PC1)+3*sd(AFR$PC1)
PC1min_afr <- mean(AFR$PC1)-3*sd(AFR$PC1)
PC2max_afr <- mean(AFR$PC2)+3*sd(AFR$PC2)
PC2min_afr <- mean(AFR$PC2)-3*sd(AFR$PC2)
PC3max_afr <- mean(AFR$PC3)+3*sd(AFR$PC3)
PC3min_afr <- mean(AFR$PC3)-3*sd(AFR$PC3)
PC4max_afr <- mean(AFR$PC4)+3*sd(AFR$PC4)
PC4min_afr <- mean(AFR$PC4)-3*sd(AFR$PC4)

geno_afr <- subset(geno,geno$PC1 < PC1max_afr & geno$PC1 > PC1min_afr & geno$PC2 < PC2max_afr & geno$PC2 > PC2min_afr & geno$PC3 < PC3max_afr & geno$PC3 > PC3min_afr & geno$PC4 < PC4max_afr & geno$PC4 > PC4min_afr)

#EAS PCmax and PCmin
PC1max_eas <- mean(EAS$PC1)+3*sd(EAS$PC1)
PC1min_eas <- mean(EAS$PC1)-3*sd(EAS$PC1)
PC2max_eas <- mean(EAS$PC2)+3*sd(EAS$PC2)
PC2min_eas <- mean(EAS$PC2)-3*sd(EAS$PC2)
PC3max_eas <- mean(EAS$PC3)+3*sd(EAS$PC3)
PC3min_eas <- mean(EAS$PC3)-3*sd(EAS$PC3)
PC4max_eas <- mean(EAS$PC4)+3*sd(EAS$PC4)
PC4min_eas <- mean(EAS$PC4)-3*sd(EAS$PC4)

geno_eas <- subset(geno,geno$PC1 < PC1max_eas & geno$PC1 > PC1min_eas & geno$PC2 < PC2max_eas & geno$PC2 > PC2min_eas & geno$PC3 < PC3max_eas & geno$PC3 > PC3min_eas & geno$PC4 < PC4max_eas & geno$PC4 > PC4min_eas)


write.table(geno_eur,'ABCD_eur.txt',quote=F,row.name=F)
write.table(geno_amr,'ABCD_amr.txt',quote=F,row.name=F)
write.table(geno_afr,'ABCD_afr.txt',quote=F,row.name=F)
